name: CI

on:
  push:
    branches: [ master, feature/dart-3-migration ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [stable]
    steps:
    - uses: actions/checkout@v3
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.sdk }}
        channel: stable
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      if: matrix.os == 'ubuntu-latest'
    
    - name: Analyze project source
      run: dart analyze --fatal-infos
    
    - name: Run tests
      run: flutter test --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        file: coverage/lcov.info

  example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: stable
        channel: stable
    
    - name: Install dependencies (root)
      run: flutter pub get
    
    - name: Install dependencies (example)
      run: flutter pub get
      working-directory: example
    
    - name: Analyze example
      run: dart analyze
      working-directory: example
    
    - name: Build example app
      run: flutter build apk --debug
      working-directory: example

  publish-dry-run:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Install dependencies
      run: dart pub get
    
    - name: Publish dry run
      run: dart pub publish --dry-run